name: Java

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include: 
          - os: ubuntu-latest
            id: linux
          - os: windows-latest
            id: mingw
          - os: macos-latest
            id: darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Test on ${{ matrix.os }}
        run: ./gradlew ${{ matrix.id }}Test ${{ matrix.id }}Jar

      - name: Upload built jar
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: libsac-jni-${{ matrix.id }}
          path: build/libs/*.jar

      - name: Upload runtime jar
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: libsac-jni-runtime-${{ matrix.id }}
          path: runtime/build/jars/*.jar
